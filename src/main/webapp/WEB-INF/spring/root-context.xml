<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- root-context : web.xml에 등록되어 있음 -->

	<!-- 1) DB 연결(DBOpen 클래스와 비슷) -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="java1113"></property>
		<property name="password" value="1234"></property>
	</bean>

	<!-- 2) mapper(notice.xml)을 스프링빈으로 주입받아 객체 생성 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
		<!-- 매핑할 XML 파일(mapper)이 있는 경로를 설정한다.  (** : 모든 폴더를 가리킴) -->
		<property name="mapperLocations" value="classpath:/dev/blog/**/*.xml" />
		
		<!-- DTO 클래스가 있는 경로 설저 -->
		<!-- 다른 경로의 패키지가 여러개 오는 경우 ,(comma)로 구분한다.		ex) value="dev.blog.notice5, dev.blog.bbs, ~" -->
		<property name="typeAliasesPackage" value="dev.blog.notice5"></property>
	</bean>
	
	<!-- 3) 1)과 2)에서 생성된 스프링빈을 이용해서 SQL 실행 객체 생성 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 스프링빈에서 객체 생성시 생성자 함수 호출 -->
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>

</beans>
